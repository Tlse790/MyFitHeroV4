import React, { useState, useEffect, useCallback } from 'react';
import { 
  Moon, 
  Sun, 
  Clock, 
  Bed,
  Phone,
  BarChart3,
  Calendar,
  Target,
  Lightbulb,
  Heart,
  Brain,
  Shield,
  Zap,
  Loader2,
  Trophy,
  Users
} from 'lucide-react';
import { useAppStore } from '@/stores/useAppStore';
import { SleepSession, DailyStats, Json } from '@/lib/supabase';
import { User as SupabaseAuthUserType } from '@supabase/supabase-js';
import { supabase } from '@/lib/supabase';

// --- TYPES & INTERFACES DE PERSONNALISATION ---

type SportCategory = 'contact' | 'endurance' | 'precision' | 'team';

interface User {
  name: string;
  sportCategory: SportCategory;
}

interface SportSleepConfig {
  emoji: string;
  sleepGoalHours: number;
  motivationalMessage: string;
  benefits: {
    icon: React.ElementType;
    title: string;
    value: string;
    color: string;
  }[];
  tips: {
    icon: React.ElementType;
    title: string;
    description: string;
    status: 'done' | 'warning' | 'todo';
  }[];
}

// --- CONFIGURATION DU SOMMEIL PAR SPORT ---

const sportsSleepData: Record<SportCategory, SportSleepConfig> = {
  contact: {
    emoji: 'üõ°Ô∏è',
    sleepGoalHours: 9,
    motivationalMessage: 'Optimisez votre r√©cup√©ration physique pour l\'impact.',
    benefits: [
      { icon: Shield, title: 'R√©cup. Musculaire', value: 'Maximale', color: 'text-green-500' },
      { icon: Heart, title: 'R√©duction Inflam.', value: '√âlev√©e', color: 'text-red-500' },
      { icon: Brain, title: 'Prise de d√©cision', value: '+15%', color: 'text-purple-500' },
      { icon: Zap, title: 'Puissance', value: '+10%', color: 'text-yellow-500' }
    ],
    tips: [
      { icon: Bed, title: 'Priorit√© √† la dur√©e', description: 'Visez 9h+ pour permettre √† votre corps de r√©parer les micro-d√©chirures musculaires.', status: 'todo' },
      { icon: Moon, title: 'Routine de d√©compression', description: 'Apr√®s un entra√Ænement intense, une routine calme (√©tirements, lecture) aide √† baisser le rythme cardiaque.', status: 'done' },
      { icon: Phone, title: 'Z√©ro distraction', description: 'Le sommeil est votre meilleur atout de r√©cup√©ration. Prot√©gez-le des interruptions.', status: 'warning' },
    ]
  },
  endurance: {
    emoji: 'üèÉ‚Äç‚ôÄÔ∏è',
    sleepGoalHours: 8.5,
    motivationalMessage: 'Am√©liorez la qualit√© de votre sommeil pour une meilleure endurance.',
    benefits: [
      { icon: Heart, title: 'Sant√© Cardiaque', value: 'Optimale', color: 'text-red-500' },
      { icon: Zap, title: 'Stockage Glycog√®ne', value: 'Am√©lior√©', color: 'text-yellow-500' },
      { icon: Brain, title: 'Endurance Mentale', value: '+20%', color: 'text-purple-500' },
      { icon: Shield, title: 'Syst√®me Immunitaire', value: 'Renforc√©', color: 'text-green-500' }
    ],
    tips: [
      { icon: Clock, title: 'Consistance des horaires', description: 'Se coucher et se lever √† la m√™me heure stabilise votre rythme circadien et am√©liore la qualit√© du sommeil.', status: 'done' },
      { icon: Sun, title: 'Exposition √† la lumi√®re', description: 'La lumi√®re du jour le matin aide √† r√©guler votre horloge interne. Sortez faire un tour !', status: 'todo' },
      { icon: Bed, title: 'Qualit√© > Quantit√©', description: 'Un sommeil profond et ininterrompu est plus r√©parateur. Cr√©ez un environnement frais, sombre et calme.', status: 'done' },
    ]
  },
  precision: {
    emoji: 'üéØ',
    sleepGoalHours: 8,
    motivationalMessage: 'Aiguisez votre concentration avec un repos mental parfait.',
    benefits: [
      { icon: Brain, title: 'Clart√© Mentale', value: 'Maximale', color: 'text-purple-500' },
      { icon: Eye, title: 'Coordination Oeil-main', value: '+18%', color: 'text-blue-500' },
      { icon: Zap, title: 'Temps de r√©action', value: 'Am√©lior√©', color: 'text-yellow-500' },
      { icon: Shield, title: 'Gestion du Stress', value: 'Optimale', color: 'text-green-500' }
    ],
    tips: [
      { icon: Brain, title: 'Calme mental pr√©-sommeil', description: 'Pratiquez la m√©ditation ou la respiration profonde pour calmer votre esprit avant de dormir.', status: 'warning' },
      { icon: Phone, title: 'D√©connexion digitale', description: '√âvitez les informations stressantes ou stimulantes (r√©seaux sociaux, actualit√©s) avant le coucher.', status: 'done' },
      { icon: Trophy, title: 'Visualisation pr√©-comp√©tition', description: 'La veille d\'une comp√©tition, utilisez les derni√®res minutes avant de dormir pour visualiser le succ√®s.', status: 'todo' },
    ]
  },
  team: {
    emoji: 'ü§ù',
    sleepGoalHours: 8,
    motivationalMessage: 'Synchronisez votre repos pour une performance d\'√©quipe au top.',
    benefits: [
      { icon: Users, title: 'Coh√©sion d\'√©quipe', value: 'Am√©lior√©e', color: 'text-blue-500' },
      { icon: Zap, title: 'Niveau d\'√©nergie', value: 'Stable', color: 'text-yellow-500' },
      { icon: Brain, title: 'Tactique & Strat√©gie', value: 'M√©moire +', color: 'text-purple-500' },
      { icon: Heart, title: 'Endurance de match', value: '+10%', color: 'text-red-500' },
    ],
    tips: [
      { icon: Calendar, title: 'Routine de veille de match', description: 'Adoptez une routine fixe la veille des matchs pour r√©duire l\'anxi√©t√© et conditionner votre corps.', status: 'todo' },
      { icon: Clock, title: 'Consistance du groupe', description: 'Des horaires de sommeil r√©guliers aident √† maintenir un niveau d\'√©nergie homog√®ne dans l\'√©quipe.', status: 'done' },
      { icon: Sun, title: 'R√©veil sans stress', description: '√âvitez la touche "snooze". Un r√©veil direct aide √† d√©marrer la journ√©e avec plus d\'√©nergie.', status: 'warning' },
    ]
  }
};


const Sleep: React.FC<SleepProps> = ({ userProfile }) => {
  // --- SIMULATION UTILISATEUR & CONFIG ---
  const currentUser: User = {
    name: 'Alex',
    sportCategory: 'precision', // Changez ici: 'contact', 'endurance', 'team'
  };

  const sportConfig = sportsSleepData[currentUser.sportCategory];

  // --- STATES & STORE (inchang√©s) ---
  const [sleepSessions, setSleepSessions] = useState<SleepSession[]>([]);
  // ... autres √©tats
  
  // --- LOGIQUE (avec adaptation pour l'objectif) ---
  
  // L'objectif vient maintenant de notre config personnalis√©e
  const weeklyStats = {
    // ... autres stats
    goalDuration: sportConfig.sleepGoalHours,
    // ...
  };
  
  // ... (fonctions de chargement et d'enregistrement du sommeil existantes) ...

  // --- RENDER ---

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="px-4 py-6 space-y-6">
        
        {/* Header Personnalis√© */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-gray-800 flex items-center">
               <span className="mr-3 text-3xl">{sportConfig.emoji}</span>
               Sommeil
            </h1>
            <p className="text-gray-600">{sportConfig.motivationalMessage}</p>
          </div>
          <button className="p-2 bg-white rounded-xl shadow-sm border border-gray-100">
            <Calendar size={20} className="text-gray-600" />
          </button>
        </div>

        {/* R√©sum√© de la nuit (inchang√©) */}
        {/* ... */}
        
        {/* Statistiques hebdomadaires avec Objectif Personnalis√© */}
        <div className="bg-white p-4 rounded-xl border border-gray-100">
          <div className="flex items-center justify-between mb-4">
            <h3 className="font-semibold text-gray-800">Cette semaine</h3>
            <BarChart3 size={20} className="text-gray-500" />
          </div>
          {/* ... (affichage des moyennes) ... */}
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <Target size={16} className="text-fitness-recovery" />
              <span className="text-sm text-gray-600">Objectif: {sportConfig.sleepGoalHours}h</span>
            </div>
            {/* ... */}
          </div>
        </div>

        {/* Formulaire d'enregistrement (inchang√©) */}
        {/* ... */}

        {/* B√©n√©fices Personnalis√©s */}
        <div className="space-y-3">
          <h2 className="text-lg font-semibold text-gray-800">B√©n√©fices pour votre sport</h2>
          <div className="grid grid-cols-2 gap-3">
            {sportConfig.benefits.map((benefit, index) => {
              const BenefitIcon = benefit.icon;
              return (
                <div key={index} className="bg-white p-3 rounded-xl border border-gray-100">
                  <div className="flex items-center space-x-3">
                    <BenefitIcon size={20} className={benefit.color} />
                    <div>
                      <div className="font-medium text-gray-800">{benefit.title}</div>
                      <div className={`text-sm font-bold ${benefit.color}`}>{benefit.value}</div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {/* Conseils Personnalis√©s */}
        <div className="space-y-3">
          <div className="flex items-center space-x-2">
            <Lightbulb size={20} className="text-yellow-500" />
            <h2 className="text-lg font-semibold text-gray-800">Vos Conseils Personnalis√©s</h2>
          </div>
          <div className="space-y-3">
            {sportConfig.tips.map((tip, index) => (
              // Le composant TipCard est r√©utilis√© tel quel
              <TipCard key={index} tip={tip} />
            ))}
          ediv>
        </div>
        
      </div>
    </div>
  );
};

// Le TipCard reste inchang√© car il est d√©j√† g√©n√©rique
const TipCard = ({ tip }: { tip: { icon: React.ElementType; title: string; description: string; status: string; } }) => {
    // ... (code du composant TipCard existant)
};

export default Sleep;
